"""
This type stub file was generated by pyright.
"""

import urllib3
from types import TracebackType

__all__ = ["CLIENT_CREDS_ENV_VARS", "prompt_for_user_token"]
LOGGER = ...
CLIENT_CREDS_ENV_VARS = ...
def prompt_for_user_token(username=..., scope=..., client_id=..., client_secret=..., redirect_uri=..., cache_path=..., oauth_manager=..., show_dialog=...): # -> Any | None:
    ...

def get_host_port(netloc): # -> tuple[Any, int | None]:
    """ Split the network location string into host and port and returns a tuple
        where the host is a string and the the port is an integer.

        Parameters:
            - netloc - a string representing the network location.
    """
    ...

def normalize_scope(scope): # -> str | None:
    """Normalize the scope to verify that it is a list or tuple. A string
    input will split the string by commas to create a list of scopes.
    A list or tuple input is used directly.

    Parameters:
        - scope - a string representing scopes separated by commas,
                  or a list/tuple of scopes.
    """
    ...

class Retry(urllib3.Retry):
    """
    Custom class for printing a warning when a rate/request limit is reached.
    """
    def increment(self, method: str | None = ..., url: str | None = ..., response: urllib3.BaseHTTPResponse | None = ..., error: Exception | None = ..., _pool: urllib3.connectionpool.ConnectionPool | None = ..., _stacktrace: TracebackType | None = ...) -> urllib3.Retry:
        ...
    


